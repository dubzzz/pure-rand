import { RandomGenerator } from './RandomGenerator';

function toUint32(num: number): number {
  return (num | 0) >= 0 ? num | 0 : (num | 0) + 4294967296;
}
function product32bits(a: number, b: number) {
  const alo = a & 0xffff;
  const ahi = (a >>> 16) & 0xffff;
  const blo = b & 0xffff;
  const bhi = (b >>> 16) & 0xffff;
  return alo * blo + ((alo * bhi + ahi * blo) << 16);
}

class MersenneTwister implements RandomGenerator {
  static readonly min: number = 0;
  static readonly max: number = 0xffffffff;

  static readonly N = 624;
  static readonly M = 397;
  static readonly R = 31;
  static readonly A = 0x9908b0df;
  static readonly F = 1812433253;
  static readonly U = 11;
  static readonly S = 7;
  static readonly B = 0x9d2c5680;
  static readonly T = 15;
  static readonly C = 0xefc60000;
  static readonly L = 18;
  static readonly MASK_LOWER = 2 ** MersenneTwister.R - 1;
  static readonly MASK_UPPER = 2 ** MersenneTwister.R;
  static readonly MEXP = 19937;

  private static twist(prev: number[]): number[] {
    const mt = prev.slice();
    for (let idx = 0; idx !== MersenneTwister.N - MersenneTwister.M; ++idx) {
      const y = (mt[idx] & MersenneTwister.MASK_UPPER) + (mt[idx + 1] & MersenneTwister.MASK_LOWER);
      mt[idx] = mt[idx + MersenneTwister.M] ^ (y >>> 1) ^ (-(y & 1) & MersenneTwister.A);
    }
    for (let idx = MersenneTwister.N - MersenneTwister.M; idx !== MersenneTwister.N - 1; ++idx) {
      const y = (mt[idx] & MersenneTwister.MASK_UPPER) + (mt[idx + 1] & MersenneTwister.MASK_LOWER);
      mt[idx] = mt[idx + MersenneTwister.M - MersenneTwister.N] ^ (y >>> 1) ^ (-(y & 1) & MersenneTwister.A);
    }
    const y = (mt[MersenneTwister.N - 1] & MersenneTwister.MASK_UPPER) + (mt[0] & MersenneTwister.MASK_LOWER);
    mt[MersenneTwister.N - 1] = mt[MersenneTwister.M - 1] ^ (y >>> 1) ^ (-(y & 1) & MersenneTwister.A);
    return mt;
  }

  private static seeded(seed: number): number[] {
    const out = Array(MersenneTwister.N);
    out[0] = seed;
    for (let idx = 1; idx !== MersenneTwister.N; ++idx) {
      const xored = out[idx - 1] ^ (out[idx - 1] >>> 30);
      out[idx] = (product32bits(MersenneTwister.F, xored) + idx) | 0;
    }
    return out;
  }

  readonly index: number;
  readonly states: number[]; // between -0x80000000 and 0x7fffffff

  private constructor(states: number[], index: number) {
    if (index >= MersenneTwister.N) {
      this.states = MersenneTwister.twist(states);
      this.index = 0;
    } else {
      this.states = states;
      this.index = index;
    }
  }

  static from(seed: number): MersenneTwister {
    return new MersenneTwister(MersenneTwister.seeded(seed), MersenneTwister.N);
  }

  min(): number {
    return MersenneTwister.min;
  }

  max(): number {
    return MersenneTwister.max;
  }

  next(): [number, MersenneTwister] {
    let y = this.states[this.index];
    y ^= this.states[this.index] >>> MersenneTwister.U;
    y ^= (y << MersenneTwister.S) & MersenneTwister.B;
    y ^= (y << MersenneTwister.T) & MersenneTwister.C;
    y ^= y >>> MersenneTwister.L;
    return [toUint32(y), new MersenneTwister(this.states, this.index + 1)];
  }

  jump(): MersenneTwister {
    // equivalent to 2^128 calls to next()
    // Implementation is derived from the one in numpy
    // https://github.com/numpy/numpy/blob/c53b2eb729bae1f248a2654dfcfa4a3dd3e2902b/numpy/random/src/mt19937/mt19937-jump.c
    const pf: number[] = [];
    for (let idx = 0; idx !== MersenneTwister.N; ++idx) {
      pf.push(0);
    }
    for (let idx = MersenneTwister.MEXP - 1; idx > -1; --idx) {
      if (poly[idx] === '1') {
        pf[idx >>> 5] ^= 1 << (idx & 0x1f);
      }
    }

    const getCoef = (pf: number[], deg: number) => {
      if ((pf[deg >>> 5] & (1 << (deg & 0x1f))) !== 0) return 1;
      else return 0;
    };

    let i = MersenneTwister.MEXP - 1;
    let rngRunner: MersenneTwister = this;
    while (getCoef(pf, i) === 0) {
      i--;
    }
    if (i > 0) {
      rngRunner = rngRunner.nextForJump();
      i--;
      for (; i > 0; --i) {
        if (getCoef(pf, i) !== 0) {
          rngRunner = rngRunner.addState(this);
        }
        rngRunner = rngRunner.nextForJump();
      }
      if (getCoef(pf, 0) !== 0) {
        rngRunner = rngRunner.addState(this);
      }
    }
    return rngRunner;
  }

  private addState(other: MersenneTwister): MersenneTwister {
    let i = 0;
    let pt1 = this.index;
    let pt2 = other.index;
    const states = this.states.slice(0);

    if (pt2 - pt1 >= 0) {
      for (i = 0; i !== MersenneTwister.N - pt2; ++i) {
        states[i + pt1] ^= other.states[i + pt2];
      }
      for (; i !== MersenneTwister.N - pt1; ++i) {
        states[i + pt1] ^= other.states[i + pt2 - MersenneTwister.N];
      }
      for (; i !== MersenneTwister.N; ++i) {
        states[i + pt1 - MersenneTwister.N] ^= other.states[i + pt2 - MersenneTwister.N];
      }
    } else {
      for (i = 0; i !== MersenneTwister.N - pt1; ++i) {
        states[i + pt1] ^= other.states[i + pt2];
      }
      for (; i !== MersenneTwister.N - pt2; ++i) {
        states[i + pt1 - MersenneTwister.N] ^= other.states[i + pt2];
      }
      for (; i !== MersenneTwister.N; ++i) {
        states[i + pt1 - MersenneTwister.N] ^= other.states[i + pt2 - MersenneTwister.N];
      }
    }

    return new MersenneTwister(states.map(v => toUint32(v)), this.index);
  }

  private nextForJump(): MersenneTwister {
    const states = this.states.slice(0);
    const idx = this.index;
    const mag02 = [0, MersenneTwister.A];

    if (idx < MersenneTwister.N - MersenneTwister.M) {
      const y = (states[idx] & MersenneTwister.MASK_UPPER) | (states[idx + 1] & MersenneTwister.MASK_LOWER);
      states[idx] = states[idx + MersenneTwister.M] ^ (y >>> 1) ^ mag02[y & 1];
    } else if (idx < MersenneTwister.N - 1) {
      const y = (states[idx] & MersenneTwister.MASK_UPPER) | (states[idx + 1] & MersenneTwister.MASK_LOWER);
      states[idx] = states[idx + MersenneTwister.M - MersenneTwister.N] ^ (y >>> 1) ^ mag02[y & 1];
    } else {
      const y = (states[idx] & MersenneTwister.MASK_UPPER) | (states[0] & MersenneTwister.MASK_LOWER);
      states[idx] = states[MersenneTwister.M - 1] ^ (y >>> 1) ^ mag02[y & 1];
    }

    return new MersenneTwister(states.map(v => toUint32(v)), (idx + 1) % MersenneTwister.N);
  }
}

export default function(seed: number): RandomGenerator {
  return MersenneTwister.from(seed);
}

// Copied from https://github.com/numpy/numpy/blob/22239d120f59826e8a2c758f4bee9893e835f511/numpy/random/src/mt19937/mt19937-poly.h
const poly = [
  '0001000111110111011100100010101111000000010100100101000001110111100010101000110100101001011001010',
  '1110101101100101011100101101011001110011100011110100001000001011100101100010100000010011101110011',
  '0100001001111010000100100101001011100111101101001100000111001000011101100100010000001111110100010',
  '0000111101000101000101101111001011000011001001001011010011001000001000011100100010110101111111101',
  '0010001001100010011011101111101110111010111000010000011010110011111101100000100100101001010000001',
  '1001111000011010011101001101011000111001110010110000011000110101111010110011011000001110110010001',
  '1001101011011101000011001011111111100011001010111100000001111011111101000101000011000011111100101',
  '0100001111101010101100000110100110010010101011011100110011000101100101011110010101110000101011100',
  '0001010100010110100000111001100000011101011001101000001000101101010100010101100000100011110110011',
  '0101100110111101010111100010100110100011111011100111000001110110010000000100000110101010111001111',
  '0011110010000110101101010001110010100111111111100100101010010011101111011000010111101001110110110',
  '1011101101101100110111000100101100111001011111110101001000011111010011000111110011100100001101111',
  '1001010110110001000100001001000010000000001011011100101010010100011000110101001000010101100111101',
  '0011110101100110111100000111001011011001100101111011000101001011011111110110100010001100101001100',
  '1111110011111111110111011011100011000100110011011011011001101011100110010001111100001111100100001',
  '1000100011001010100101010100111110001100111111011111100100011110011101101000110100101110010111111',
  '1001010110000101001110010110001011011010101111111001110001100100011001000010111001011011000111100',
  '1101001011110111111010011000110100001010000000101010101001111101111110101111110101110101010010100',
  '1100100101010110011111001101100110001011000101010001000110011011111101111110001100000010110110101',
  '1111110100001011101011101110111101100001111000011100000110110100100100100101011000111000100110001',
  '0110110001001000111110101111000000100100010100100101101111100011010100111101110010000001011111111',
  '1101010000011001010101111001111110001111100010100010100001011001110001010010100001011111110110111',
  '1100100100001111000111110111000100010101010110100111100001011001101001111101001110010110110011010',
  '1000010011000110000000110110110000111010010000111001100010100101010101111100010111000000011101110',
  '1100011010110001101100110000001010001100111101101011100111110111000110010011011011001101001111100',
  '1011111001100011010110101111100110111101011100000011000010001010001101001011000001111000101000100',
  '0110001011001010110000001101100000011000011110010000101000011010011110001101111111010010101100100',
  '1111010100000011011001111111011011111001101110101010110111110110101000100001011110111010100111100',
  '0000001001111100111111111000100000100100010001011001100001111100100000001111011101100010011000111',
  '0011110110100011011001110011100011011000010000000101101101001010111000010000010101111110000000100',
  '1011010100001001000011001100011000000111100111100101010100000111000000110111011101011111100010101',
  '0011001100110000010101111001000111001001010100011000110010011011101001001100101100000000111000111',
  '0111111000010010010100000101010010000100101011111111111001100101101010011010100010111001011100011',
  '1001001011010000110000111100010110110100000100110010000010010000001000110010101000110101101100100',
  '0001100001100011110110010000100000100010011001010010110111100011011000101011001100001111110110110',
  '0001100110010100011001101000100001110011011111101001101011110011011011111110111110101110010011001',
  '1000000101100000101100100000100000001011000100100001100100101101010111101010111101010001001010110',
  '0011111011001101001110110010100100000011001001111010001001100101110000000010111101000111111101010',
  '0110101110101110001001110000111110100000101101100110010001111101111011001000101110111010110111110',
  '0011001101011010001011000010000111111111101001011100110101011000000001111000101100011101011011100',
  '1111101110000000000110001110011001101100111111010001110000111110100011000100001100110010000110111',
  '1001011011001111011100000000011011000100000011000010010111000111101000011001001100011010001111000',
  '0011110010100010001101011101010011001100000010101001001101111101000111001110110000000010111101001',
  '1110110011101110111010011100101001010101100100011111100110001111011111110010100000011100110110001',
  '1011100000101000010100011101000010111100101111101100110001010001010000101110000000110100010110011',
  '1111110100101010011010100001100110110110011111110010000100001010011110010110001000000100000111000',
  '0111001010011001000010111001100110100110110101111011110111001001000101010010010011000111110010101',
  '1100110001100101001000010001101010011001110011001110001110010100010000000000000110111001010101000',
  '0111111011011101000111011001011011000101110100010001111100101110000100001011111101111101010011001',
  '0010001100011011101100010010101011001000001001010101100110001111001110011100110111111010110010001',
  '1111111101111001001101101001001010011001110000101000110010111110010110111111000100101000101011010',
  '0000101101101100000110101000101000010001111000100000111110011111111110010010001010001111011001100',
  '0011110111000000111111000100001111101110100010101011001010110110011001010010001011100001010110101',
  '0100000010101101000011001101110010000010110011000101100100000111111100011001110011010011001110000',
  '1110011110000000001001001010100000111001010110001110011100011010010010001110010011001010111100000',
  '1110000101101001011010001001010000111000010011010100001010110000101101110110011000011100111100001',
  '1001000011010001110110111001100100001111110010110010011111000010100000001101110100000000101101000',
  '0011000000100011000111110001000011100111110110000110101111101100011110100111111000000011011110110',
  '1101011010111010010001001101000110110010000010101000000001100100100000001111011001001010110100011',
  '1011000010101111010111000001001100111110000010110010011011110011111001000101111011010011010100001',
  '0110011111100001011111101010010100110001001001001000100010101011011000011100111000110101110000001',
  '1100001111100011110010000101011000010101111010001101010101100001100101100000100100000101011001100',
  '0011001000101010101010100111000100100010101000111111101010000000101010101001000101010100100111001',
  '1001100001010001100110111101010001111010011100000001001110100010010011110100001000011111100010001',
  '0010001000100110101011001110100110101110110110100101111000110101101101001000001110011010110011001',
  '0111111101011011101001111001011100001010110111000001100010110110100011010111011000111010100011000',
  '1111010110001001010000110001000101101100010100000000100001111100000010111001000011000101010100001',
  '0001101100011100010100101110010100000010011011010100000111110110000110101011011010010001110000111',
  '0110101000110101110010011100010010100111001101110110010001101001101101010100001010001110111011011',
  '1010011001010111101001011000100111001110011000000001101000001111001100001100000011001110100110011',
  '0011000110001001010111111111110110111111000111100010010101110000101100101000001010001011010100010',
  '1010010100010011101111100111010010010001110101011110110100001000001001000111001110010001001100100',
  '1100100010001010011011110100000101101011101010110110100100010001110000111010111001111011111001011',
  '0000000000011000100100100111001000101111000000110001011110101111110111100000000100101011000111011',
  '1011010011101000001011001001110001111010000100101101010111001010001000100001000111011010000110111',
  '1010110001001110001100001110011000101100000101100000000110101000000110101100100101110001100100100',
  '0110000110101011100001010001010000011101111011111011011000100100101011110101111000001011110010110',
  '0111011011100111101010110001111011010011111000010111110100001001010001011001000110111100000101011',
  '0010111111010100000110111101001100000100001011101010100011010010000001101100100101001000100011000',
  '0101010111111100100000111011101111100000011011111111010001100011001100101101011110101011101100001',
  '0100010011101111111011000111111101001000101101111001111000101110010111001010101011010111000000101',
  '0110010000010010101111100010111110000000011101001000011111001011111100111100100101100101111010110',
  '1010101001110011111100111110100000111100100000111111000010100001111011111110110010001001000000000',
  '1110100110010111100101111111001010001111001101100001011000111011100010100001000010100000011001000',
  '0000111000110111001001100010111010100111111001111101100101000011001001110011100110101110001101110',
  '1110000010110110010110000111001110110000011011100111000101100101000000001110011011001001111001111',
  '0000101100001000000111100110110000110111111001101001111111010000001011110011011011100100110000110',
  '1001011111101100100111111000000010001110111011010011011101001100000011001010000010101111111010110',
  '0001000100101110101101100001001010100110010000110110100110011001000111011110110011001110111110101',
  '0000011111011011001111010010101011000010011101001011100001010001111001000110000010000101010011111',
  '0110011000001111101001110001101011111111001010010110100001101000000011101000101011101000110101111',
  '0000101110011010010000110100000101100011000100101111100011001111011101001010100111001110100001101',
  '0000110111011000000110011001101011110000101100110110000101100000110110100001001001110001110001001',
  '1100110111111100101001100010010110011011110001000111111111001101111110010000011001011010111101001',
  '1101111110101110110100101100110001101101001010111101101000000011111111100101000101110001000011001',
  '1000111110111011010010101011110110110001010001001001100111111010011101111000000111011000011010011',
  '0111010101001110010100101101000110000110001100010101001110101011010100000110110111111111110011110',
  '0100011110100011001000110101111010000001011011110101001100111100010100101100010000010110011001111',
  '0011011110001110010010100100011111110000110011011100010110110101001110011010101111011001010101011',
  '1001001111001000001100100111000001000110110101100111000101011000000100001000100010011000001110011',
  '0000111100000111001101011111010000010001100000010101101000111100001000010011110000001011001001100',
  '0011011011111011100000111101001011101000010010001001111110010101111010110101101110110111010000101',
  '1100011000000000110110100011010100100010001101010101101110110111111011010110011101011010110101011',
  '1101000000010010011111000000101000110001000011100001101111010101100000100000100111111111100000000',
  '0011100011100101110010111100010111110010101110101000011000111111001110111111000001101101011011111',
  '1100110101001000011111001111000000001010001001010101101000001100111010101100010111001001111100000',
  '1110101101110001011100011101101100001001001011100111100110011101111000100010010001111100001010010',
  '1011001001010100101100010010000110010000101010111111001000011100000000101101110010001101110101001',
  '1110000011100101010000011110000010001000001010110001010000100111001100110001111000100100011100110',
  '1100010011110111001001100000100111001010000000000011100011111111101110010101111010100010000100001',
  '0101101001010111111110000110110010100000001011110100010111110111010000001011110110111000000110010',
  '0001100100111110001100010101000010011111100000100010000101110000111001101100100000011111111100010',
  '1001101101001000001111000100100001010110111011110110001001010001110001001100011001001100000000101',
  '1100011110101101011001100001010110001010000111100000011011011001000010101100010101110011001101110',
  '0000101011010001010011111001011000010101010100110110111110101000111110001000010100000000100010100',
  '1000111111000110110010001111000010101011101101111101011110101111100111111100111101000101000010011',
  '0010111010100010011001000000010111100010000101001011001101100011100001001111010100100110101111111',
  '1000010011110101001010011111111011101001110100001001100010000100001001100101101111011100100011001',
  '1111010001011001111101011110101101000111110101001010011101010010010101001000000000011001100110001',
  '0001000010101010101000010100111000001110000111001110001101111111000010101010111001011101001001011',
  '0011001111011010101110101111110001001100100111010001011000010100000100000001001100000011000011101',
  '1100000110000001011001110000101001010111101000110101000011000000111011100101010000111000010010101',
  '1010100101100001011011011110110011000100100101010011111101000000100001001101000011000101010111101',
  '1110111111100010111000111000010110111010010110000000000100101001000111101101100000000110111011001',
  '0100000000100100011110111011101101101101010110001110100001100001001011000000111111110100011110011',
  '0010000010000000010100110011110000000010000011111000111101011110000000000010101101001100000010010',
  '1011001001101110110011100001100011101001101011110011010001011101000100011111001010100000011111111',
  '1010101100000010001000110000110000101000110100110011100000110010110100011111010001000011100001001',
  '1000101000010111111011100010111000111001010100110000000010011011101010101111000110001000110111011',
  '1011100001100011010001101011010100110110011100000010111001011111110010100110100010001100000011100',
  '0001011001011000101011010000001010011010001011000111000011000011110011111001111010001101011010010',
  '0010010001001001101000101001011011101110001100010001010100010111111001100100000010001111100010111',
  '0100001111001100101001011101010010110010100010001100011010100110000100011010111110001011011001000',
  '1001001111011010010011101110100001111100000110101001010111110001101100110010111010111001011111010',
  '1110111011111110000001110010000010011111000111011011000011000010011110011111111101100101111011100',
  '0101101100000110101110000111111111111010110101010100111000011111011001100000100000101011000101110',
  '1011010010100000000100100000010111101110111001000011111011111110100011010010000110001101111101100',
  '1100010111001011011001011001010100100110100101001000111011011001100011001010010101111001100100110',
  '1000110000111011100101110101101000011001010010100011000001111001110110101101010010110110001100100',
  '0100001011101100111001010001111011010110010010110010110111110001001001111001111010010001010001101',
  '1110100110101100011110100100110111000111010110011000100100110110001101111100111110100001000110000',
  '1110011011001101100101100000001010100011101000010100111011111100011010000110000001011100010000101',
  '0100101000010001110010001100010110011111111101111000011001110111011100110010010100100010001000010',
  '0100001110010000011000110001101011101001110100100011011001000111010101110100110011010111001100001',
  '0100001001101010010111110101110111000000010100111101011010101001000001001000001000101101111000000',
  '0110000101110100001111001101110111011110010111101000100101110111010101001101100001110001101101101',
  '0010101100100101000100100100110111000111000111100111000001100001000111101011000110111110001010000',
  '0100110010001101100011010111000111010111000111110000110000101111101110010110111001011000111010001',
  '1011000010010101010010011001000011010110111011010001001010100111001000010110110110101110000110000',
  '1110110010011001011011000100011101001001000111011100100000000000100001101101000101000100000111001',
  '0011100001100110101011011101110111101111000100100011100001010001011001110010101010001110101101110',
  '1011001110111111111010101101000010111111011011011100011100101010001011011100011111011100101011000',
  '1000110100101000011111010011110000000101101110010000101100001000100000000010010110000000000110011',
  '1000000000001111001001000100000111001110111111001111101100001100111000101100011000100111111110011',
  '1110010101011010111100110010110001010000101111111101001010100010001001111010111000010000010010001',
  '1111111101100100001101011011100001010101000111110111111101011010011111111101000111011001011011000',
  '0000101011100011101110110011101111011110011110010000011001111001110111011011111010011011001110111',
  '0101100111110100000100010110010010101001010100010111000101111001011011001001110010100011101111110',
  '1101011110010101101011010010011111110000011010011101000000010000111010100100111110111000001101010',
  '0101100001111001111010101011110001001010000011010110010100011100100100111110100110000010011111001',
  '0100010011001001010101110111111010011101101100000101011110111010011110001111110100111011110011010',
  '0111001010110101010110000011001010000000101101010101001101011000011011010110101010101111101101100',
  '1100100000111101010111011011011110011001100010010000010100101000111111101011100111010101011000111',
  '1100110010101100010011111100000110011111101011100100001110001100001010101001001100010011001000100',
  '1101101000101101110010000001101001001110101111000110111000011101111110100100110111000000101011110',
  '0001100100001010101001101111001000001100000011010000100101100000001110100010010000110110101010111',
  '1100010100000110011100101010111110010110111100000010110011011001011110111001010011011110010001110',
  '1101110000001011101101011111101011111110110110000111110011101100110100010000100000110100010010110',
  '0011000011000110101001110100111010110000100010110101110111100010110001000111100111001011011110010',
  '0001001110101001101101011010111001001101100011101001011011001110011010001010110100111001111100101',
  '1000111001010010000010111010101110001100110111111000011101001000001010010011101000111001100111110',
  '1110100100100110010111111101010011101111011011111011011010011110100101100001011000001001001010010',
  '1100001000000110110011011101010001011110010001001110110100100001101101001011101010001110111111010',
  '1100011100101000011110111110110011111111100010110010110111010010001111101110011011010110000001000',
  '0010110100010101110100001000010011100110001110001110010100010010010110011100100110010100001110011',
  '1100001011010000001101011011011110100000001110100111001000101000001000001001000010000111010000100',
  '0111100000101010110010111010010101100000001100110101001001000110001110111011110001010010010011000',
  '1100001111101101100001111000101100110010001000111001101101011110100110100011101000011111011010101',
  '0101000011111010010110001001100110110111000100100011011101000010001010110001111001111101110001111',
  '0100100000010111010011111110000101001001011110100100010011101110011010100101100001010000001110100',
  '0011111101111000100110011000011001100100001010110011111100111010100011110100010101011110011001000',
  '0000110000100100001011101110111010001001011110010101111100001111101101111011011110001010000100010',
  '1001100100100100110010010101100110000000100000000111110011100111101001010000010000000000101011100',
  '0011101011100110000001100101010101011111111011010011110010011011001010011101010010100010001011010',
  '1100010011101011010111110100001010100011000011001001011011101111110011001110010001100101011001101',
  '0100010001111111100000101000001011010100011100111011010111001100110110001100110101000011010001010',
  '1011100001001010011110001010100100001101110011101011100100101010001100110011110010001100100001000',
  '0110001001110110010111101011101101010111001010011010101110000010100010000111011000010110011000001',
  '1000110010100001110001100010010000001101111110000010010110100000000000001111110010001110111100001',
  '0100111101000011101110010101011011000101011010111100111111001011110001110011110011011010010111101',
  '1010111011101101000001110111001010011001110010100100100100001010001100101010111001110100000110111',
  '1010000111000011101101100101101001100000011100100111100110010110011100101000111110111000110111110',
  '1101100101011101100111011111111001111000011110111110101100000111000101100100110111000010100101000',
  '0110000011011101111101111000110101011000010111010000111011000000100011101010100111001111101010111',
  '0001110100001000100001011101001010001110100000101100001011101111100111101011111001111100101101111',
  '0101100001110011111110110100110010000011011111101101110110000110110011100110111000111101000010111',
  '0111101011100100000000011101111011000100001000111000000111011010101010110000111111101010110001111',
  '0000110100111101111011001010101110000011001101001101000010011001101011111110111101010111010011100',
  '0101010011001111101111001100101000101000111110111001011111100000001101111011000001001100111111111',
  '1010111101000001111011110010001001001110100111110010000011110000011000000101001100011110110011001',
  '1010101001000010001010110000010011110101011110010111010001010111101100001001100011101001111101001',
  '0110110100111001110011100011111010010010100010111000001100001011010010000100100110101010111001001',
  '0110000101011011011100110111111001010000001001011010101010010001011010111100111010101101000101101',
  '0100100001011101110111111001111111110110111011000101010000010000011111001000100101100100100110110',
  '1100000111110010110011010100000100011111110001110010110001000001001111001101110110110101101010111',
  '0000100111101100010001110010110111100011100101100011'
].join('');
